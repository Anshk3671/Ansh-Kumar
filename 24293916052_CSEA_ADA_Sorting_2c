#include <stdio.h>
#include <stdlib.h>
#include <time.h>

// Function to perform Insertion Sort
void insertionSort(int arr[], int n) {
    int i, key, j;
    for (i = 1; i < n; i++) {
        key = arr[i];
        j = i - 1;

        // Move elements of arr[0..i-1], that are greater than key, to one position ahead
        while (j >= 0 && arr[j] > key) {
            arr[j + 1] = arr[j];
            j = j - 1;
        }
        arr[j + 1] = key;
    }
}

int main() {
    int n;
    clock_t start, end;
    double time_taken;

    FILE *fp = fopen("insertion_sort_time.csv", "w");
    if (fp == NULL) {
        printf("Error creating file!\n");
        return 1;
    }

    fprintf(fp, "n,Time(seconds)\n");

    printf("Insertion Sort Time Analysis\n");

    // Run for increasing sizes of n
    for (n = 1000; n <= 20000; n += 1000) {
        int *arr = (int *)malloc(n * sizeof(int));
        if (arr == NULL) {
            printf("Memory allocation failed!\n");
            return 1;
        }

        // Generate random integers
        for (int i = 0; i < n; i++)
            arr[i] = rand() % 100000;

        // Measure sorting time
        start = clock();
        insertionSort(arr, n);
        end = clock();

        time_taken = ((double)(end - start)) / CLOCKS_PER_SEC;
        fprintf(fp, "%d,%.10f\n", n, time_taken);

        free(arr);
    }

    fclose(fp);

    printf("Data saved to 'insertion_sort_time.csv'.\n");
    printf("Use Excel or Python to plot graph of Time vs n.\n");

    return 0;
}

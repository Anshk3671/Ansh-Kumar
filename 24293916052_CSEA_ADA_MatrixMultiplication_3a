#include <stdio.h>
#include <stdlib.h>
#include <time.h>

// Function to multiply two matrices
void multiplyMatrices(int **A, int **B, int **C, int n) {
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            C[i][j] = 0;
            for (int k = 0; k < n; k++) {
                C[i][j] += A[i][k] * B[k][j];
            }
        }
    }
}

int main() {
    int n;
    clock_t start, end;
    double time_taken;

    FILE *fp = fopen("matrix_multiplication_time.csv", "w");
    if (fp == NULL) {
        printf("Error creating file!\n");
        return 1;
    }

    fprintf(fp, "Matrix_Size,Time(seconds)\n");

    printf("Matrix Multiplication Time Analysis (Iterative Method)\n");

    // Test for different matrix sizes
    for (n = 100; n <= 1000; n += 100) {
        // Dynamically allocate memory for matrices
        int **A = (int **)malloc(n * sizeof(int *));
        int **B = (int **)malloc(n * sizeof(int *));
        int **C = (int **)malloc(n * sizeof(int *));
        for (int i = 0; i < n; i++) {
            A[i] = (int *)malloc(n * sizeof(int));
            B[i] = (int *)malloc(n * sizeof(int));
            C[i] = (int *)malloc(n * sizeof(int));
        }

        // Generate random elements
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                A[i][j] = rand() % 100;
                B[i][j] = rand() % 100;
            }
        }

        // Measure time for multiplication
        start = clock();
        multiplyMatrices(A, B, C, n);
        end = clock();

        time_taken = ((double)(end - start)) / CLOCKS_PER_SEC;
        fprintf(fp, "%d,%.10f\n", n, time_taken);

        // Free allocated memory
        for (int i = 0; i < n; i++) {
            free(A[i]);
            free(B[i]);
            free(C[i]);
        }
        free(A);
        free(B);
        free(C);

        printf("Matrix size %d x %d processed.\n", n, n);
    }

    fclose(fp);

    printf("\nResults saved to 'matrix_multiplication_time.csv'.\n");
    printf("Use Excel or Python to plot graph of Time vs Matrix Size.\n");

    return 0;
}
